# ==============================
# Server
# ==============================
server.port=8080
spring.application.name=notification-service

# ==============================
# Kafka Configuration
# ==============================
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=notification-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.sunfinance.common.model
spring.kafka.consumer.properties.spring.json.value.default.type=com.sunfinance.common.model.Verification

# ==============================
# PostgreSQL
# ==============================
spring.datasource.url=jdbc:postgresql://postgres-notification:5432/notificationdb
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ==============================
# Mail Configuration (MailHog)
# ==============================
spring.mail.host=mailhog
spring.mail.port=1025
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

# ==============================
# Template Service (Docker internal name)
# ==============================
template.service.url=http://template-service:8080

# ==============================
# Gotify Configuration
# ==============================
gotify.url=http://gotify:80/message
gotify.token=your-gotify-token

# ==============================
# Logging
# ==============================
logging.level.root=INFO
logging.level.org.springframework.kafka=DEBUG
logging.level.com.sunfinance.notification=DEBUG
